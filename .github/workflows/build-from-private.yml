name: Build and Release from Private Repo

on:
  repository_dispatch:
    types: [build-release]
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repository (owner/repo)'
        required: true
        default: 'xettrialeen/startuzSocial'
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'
      notes:
        description: 'Release notes'
        required: false
        default: 'New release'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout private repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.client_payload.source_repo || github.event.inputs.source_repo }}
        token: ${{ secrets.PRIVATE_REPO_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: ''
        
    - name: Install dependencies
      working-directory: frontend/startuz
      run: npm install
      
    - name: Build app
      working-directory: frontend/startuz
      run: npm run build
      
    - name: Create dist.zip
      run: |
        cd frontend/startuz/dist
        zip -r ../../../dist.zip .
        cd ../../..
        
    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
          echo "NOTES=${{ github.event.client_payload.notes }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "NOTES=${{ github.event.inputs.notes }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: Release v${{ steps.version.outputs.VERSION }}
        body: ${{ steps.version.outputs.NOTES }}
        files: dist.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}